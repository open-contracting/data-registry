name: CI
on: [push, pull_request]
jobs:
  build_backend:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.8
          cache: pip
          cache-dependency-path: '**/requirements*.txt'
      - run: pip install -r requirements.txt
      # Check requirements.txt contains production requirements.
      - run: ./manage.py --help
      - run: pip install -r requirements_dev.txt
      - name: Run checks and tests
        env:
          # django-modeltranslation>0.17.3 https://github.com/deschler/django-modeltranslation/pull/618
          # django-markdownx>3.0.1 https://github.com/neutronX/django-markdownx/pull/206
          PYTHONWARNINGS: error,ignore:'modeltranslation',ignore:::markdownx.urls
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres
        run: |
          ./manage.py migrate
          ./manage.py makemigrations --check --dry-run
          ./manage.py check --fail-level WARNING
          coverage run --source core,data_registry,exporter manage.py test
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: coveralls --service=github
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp

  build_frontend:
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: data_registry/vue
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3.1.0
        with:
          node-version: 16.x
          cache: npm
          cache-dependency-path: '**/package-lock.json'
      - run: npm ci
      - run: npm run build --if-present
